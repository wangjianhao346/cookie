<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rain.cookie.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.rain.cookie.entity.Article">
    <id column="PID" jdbcType="INTEGER" property="pid" />
    <result column="ARTICLE_TITLE" jdbcType="VARCHAR" property="articleTitle" />
    <result column="MODULE_ID" jdbcType="INTEGER" property="moduleId" />
    <result column="AUTHOR" jdbcType="VARCHAR" property="author" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="IS_DELETE" jdbcType="CHAR" property="isDelete" />
    <result column="VIEWS" jdbcType="INTEGER" property="views" />
    <result column="LIKE" jdbcType="INTEGER" property="like" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.rain.cookie.entity.Article">
    <result column="ARTICLE_CONTENT" jdbcType="LONGVARCHAR" property="articleContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    PID, ARTICLE_TITLE, MODULE_ID, AUTHOR, CREATE_TIME, UPDATE_TIME, IS_DELETE, VIEWS, 
    LIKE
  </sql>
  <sql id="Blob_Column_List">
    ARTICLE_CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.rain.cookie.entity.ArticleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.rain.cookie.entity.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_article
    where PID = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_article
    where PID = #{pid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rain.cookie.entity.ArticleExample">
    delete from sys_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rain.cookie.entity.Article">
    insert into sys_article (PID, ARTICLE_TITLE, MODULE_ID, 
      AUTHOR, CREATE_TIME, UPDATE_TIME, 
      IS_DELETE, VIEWS, LIKE, 
      ARTICLE_CONTENT)
    values (#{pid,jdbcType=INTEGER}, #{articleTitle,jdbcType=VARCHAR}, #{moduleId,jdbcType=INTEGER}, 
      #{author,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDelete,jdbcType=CHAR}, #{views,jdbcType=INTEGER}, #{like,jdbcType=INTEGER}, 
      #{articleContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.rain.cookie.entity.Article">
    insert into sys_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        PID,
      </if>
      <if test="articleTitle != null">
        ARTICLE_TITLE,
      </if>
      <if test="moduleId != null">
        MODULE_ID,
      </if>
      <if test="author != null">
        AUTHOR,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="isDelete != null">
        IS_DELETE,
      </if>
      <if test="views != null">
        VIEWS,
      </if>
      <if test="like != null">
        LIKE,
      </if>
      <if test="articleContent != null">
        ARTICLE_CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="articleTitle != null">
        #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="moduleId != null">
        #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=CHAR},
      </if>
      <if test="views != null">
        #{views,jdbcType=INTEGER},
      </if>
      <if test="like != null">
        #{like,jdbcType=INTEGER},
      </if>
      <if test="articleContent != null">
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rain.cookie.entity.ArticleExample" resultType="java.lang.Long">
    select count(*) from sys_article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_article
    <set>
      <if test="record.pid != null">
        PID = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.articleTitle != null">
        ARTICLE_TITLE = #{record.articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleId != null">
        MODULE_ID = #{record.moduleId,jdbcType=INTEGER},
      </if>
      <if test="record.author != null">
        AUTHOR = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        IS_DELETE = #{record.isDelete,jdbcType=CHAR},
      </if>
      <if test="record.views != null">
        VIEWS = #{record.views,jdbcType=INTEGER},
      </if>
      <if test="record.like != null">
        LIKE = #{record.like,jdbcType=INTEGER},
      </if>
      <if test="record.articleContent != null">
        ARTICLE_CONTENT = #{record.articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update sys_article
    set PID = #{record.pid,jdbcType=INTEGER},
      ARTICLE_TITLE = #{record.articleTitle,jdbcType=VARCHAR},
      MODULE_ID = #{record.moduleId,jdbcType=INTEGER},
      AUTHOR = #{record.author,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      IS_DELETE = #{record.isDelete,jdbcType=CHAR},
      VIEWS = #{record.views,jdbcType=INTEGER},
      LIKE = #{record.like,jdbcType=INTEGER},
      ARTICLE_CONTENT = #{record.articleContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_article
    set PID = #{record.pid,jdbcType=INTEGER},
      ARTICLE_TITLE = #{record.articleTitle,jdbcType=VARCHAR},
      MODULE_ID = #{record.moduleId,jdbcType=INTEGER},
      AUTHOR = #{record.author,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      IS_DELETE = #{record.isDelete,jdbcType=CHAR},
      VIEWS = #{record.views,jdbcType=INTEGER},
      LIKE = #{record.like,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rain.cookie.entity.Article">
    update sys_article
    <set>
      <if test="articleTitle != null">
        ARTICLE_TITLE = #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="moduleId != null">
        MODULE_ID = #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        AUTHOR = #{author,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        IS_DELETE = #{isDelete,jdbcType=CHAR},
      </if>
      <if test="views != null">
        VIEWS = #{views,jdbcType=INTEGER},
      </if>
      <if test="like != null">
        LIKE = #{like,jdbcType=INTEGER},
      </if>
      <if test="articleContent != null">
        ARTICLE_CONTENT = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where PID = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.rain.cookie.entity.Article">
    update sys_article
    set ARTICLE_TITLE = #{articleTitle,jdbcType=VARCHAR},
      MODULE_ID = #{moduleId,jdbcType=INTEGER},
      AUTHOR = #{author,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      IS_DELETE = #{isDelete,jdbcType=CHAR},
      VIEWS = #{views,jdbcType=INTEGER},
      LIKE = #{like,jdbcType=INTEGER},
      ARTICLE_CONTENT = #{articleContent,jdbcType=LONGVARCHAR}
    where PID = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rain.cookie.entity.Article">
    update sys_article
    set ARTICLE_TITLE = #{articleTitle,jdbcType=VARCHAR},
      MODULE_ID = #{moduleId,jdbcType=INTEGER},
      AUTHOR = #{author,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      IS_DELETE = #{isDelete,jdbcType=CHAR},
      VIEWS = #{views,jdbcType=INTEGER},
      LIKE = #{like,jdbcType=INTEGER}
    where PID = #{pid,jdbcType=INTEGER}
  </update>
</mapper>